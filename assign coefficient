public void assign_coef(double coef, int exp){

        // if exponent is already equal to passed exponent, no search, only assign
        if(this.function.getExp()==exp){
            if(coef==0){
                // eliminate first node because coeff is zero
                this.function=this.function.getNext();
            }else{
                // assign new coeff for first node
                this.function.setCoeff(coef);
            }

        }else{
            // find the passed exponent within node list because it was not the first term
            TermNode index = TermNode.expSearch(this.function, exp);

            // if exp found, assign new coeff
            if(index!=null){
                if(coef!=0){
                    index.setCoeff(coef);
                }else{
                    // if coeff is zero,
                    // find node previous to node with exponent equal to exp,
                    // then, delete node with zero being assigned to it
                    for(index=this.function; index.getNext()!=null; index=index.getNext()){
                        if(index.getNext().getExp()==exp){
                            index.removeNodeAfter();
                        }
                    }
                }

            // if exp not found, create new node for new coeff because it was not found in search
            }else if(coef!=0){
                // if exponent passed is the largest, create new node at beginning
                if(exp>this.function.getExp()){
                        this.function = new TermNode(coef, exp, this.function);
                        removeZeroTerms();

                // if exp is not the largest,
                // find the next node where passed exponent+1 < current node.exp
                // then create new node if not zero, keeping terms in order
                }else{
                    index=this.function;
                    while (index.getNext()!=null && exp+1<index.getExp()) {
                        index=index.getNext();
                    }
                    index.addTermAfter(coef, exp);
                }
            }
        }
    }//end method
